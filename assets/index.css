@import "eternium/eternium.css";

body {
    font-family: 'Roboto', sans-serif;
}

.button {
    --border: rgb(0 0 0/13%);
    --highlight: rgb(255 255 255/20%);
    --shadow: rgb(0 0 0/10%);
    display: flex;
    height: 2.5rem;
    user-select: none;
    align-items: center;
    justify-content: center;
    gap: 0.25rem;
    white-space: nowrap;
    border-radius: 0.5rem;
    border-style: none;
    background-color: white;
    padding-left: 1rem;
    padding-right: 1rem;
    font-size: 1rem;
    line-height: 1.5rem;
    color: black;
    text-decoration-line: none;
    outline-width: 2px;
    outline-offset: 2px;
    outline-color: hsl(204 100% 40%);
    box-shadow:
            inset 0 0 0 1px var(--border),
            inset 0 2px 0 var(--highlight),
            inset 0 -1px 0 var(--shadow),
            0 1px 1px var(--shadow);
    font-weight: 500;
}

.button:where(.dark, .dark *) {
    --border: rgb(255 255 255/10%);
    --highlight: rgb(255 255 255/5%);
    --shadow: rgb(0 0 0/25%);
    background-color: rgb(255 255 255 / 0.05);
    color: white;
    box-shadow:
            inset 0 0 0 1px var(--border),
            inset 0 -1px 0 1px var(--shadow),
            inset 0 1px 0 var(--highlight);
}

.button:not(:active):hover {
    --border: rgb(0 0 0/33%);
}

.button:where(.dark, .dark *):not(:active):hover {
    --border: rgb(255 255 255/25%);
}

.button[aria-disabled="true"] {
    opacity: 0.5;
}

.button[data-focus-visible] {
    outline-style: solid;
}

.button:active,
.button[data-active] {
    padding-top: 0.125rem;
    box-shadow:
            inset 0 0 0 1px var(--border),
            inset 0 2px 0 var(--border);
}

@media (min-width: 640px) {
    .button {
        gap: 0.5rem;
    }
}

.button:active:where(.dark, .dark *),
.button[data-active]:where(.dark, .dark *) {
    box-shadow:
            inset 0 0 0 1px var(--border),
            inset 0 1px 1px 1px var(--shadow);
}

.secondary {
    background-color: transparent;
    color: currentColor;
    box-shadow: none;
}

.secondary:hover {
    background-color: rgb(0 0 0 / 0.05);
}

.secondary:where(.dark, .dark *) {
    background-color: transparent;
    box-shadow: none;
}

.secondary:hover:where(.dark, .dark *) {
    background-color: rgb(255 255 255 / 0.05);
}

.secondary:active:where(.dark, .dark *),
.secondary[data-active]:where(.dark, .dark *) {
    box-shadow: none;
}

.backdrop {
    background-color: rgb(0 0 0 / 0.1);
    -webkit-backdrop-filter: blur(4px);
    backdrop-filter: blur(4px);
    position: fixed;
    inset: 0px;
    z-index: 50;
    overflow: auto;
    padding-left: 1rem;
    padding-right: 1rem;
    padding-top: 4rem;
    padding-bottom: 4rem;
}

.backdrop:where(.dark, .dark *) {
    background-color: rgb(0 0 0 / 0.3);
}

.dialog {
    z-index: 50;
    margin: auto;
    display: flex;
    height: fit-content;
    flex-direction: column;
    gap: 1rem;
    overflow: auto;
    border-radius: 0.75rem;
    background-color: white;
    padding: 1rem;
    color: black;
    box-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25);
    position: relative;
    inset: auto;
    max-height: none;
}

@media (min-width: 640px) {
    .dialog {
        top: 10vh;
        bottom: 10vh;
        margin-top: 0px;
        max-height: 80vh;
        width: 90%;
        border-radius: 1rem;
        padding: 1.5rem;
    }
}

.dialog:where(.dark, .dark *) {
    border-width: 1px;
    border-style: solid;
    border-color: hsl(204 4% 24%);
    background-color: hsl(204 4% 16%);
    color: white;
}

.heading {
    margin: 0px;
    font-size: 1.25rem;
    line-height: 1.75rem;
    font-weight: 600;
}

.header {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

